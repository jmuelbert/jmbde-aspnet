---
name: "CI: Build Test"

on: [push, pull_request]

env:
    RUN_ID: build.${{ GITHUB.RUN_ID }}
    RUN_NUMBER: build.${{ GITHUB.RUN_NUMBER }}
    SHA: ${{ GITHUB.SHA }}
    MYGET_API_TOKEN: ${{ SECRETS.MYGET_API_TOKEN }}
    GITHUB_TOKEN: ${{ SECRETS.GITHUB_TOKEN }}
    ProjectName: jmbde

jobs:
    build:
        runs-on: windows-latest
        env:
            Configuration: Release
            Net-SDK: 5.0.103
            NET_TFM: net5.0

        steps:
            - name: Checkout
              uses: actions/checkout@v2
              with:
                  fetch-depth: 0

            - name: Git fetch tags
              run: git fetch --tags

            - name: Check tags
              run: git tag -l -n

            - name: Get tag
              if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') }}
              id: tag
              uses: dawidd6/action-get-tag@v1

            - name: Setup dotnet 5.0.x sdk
              uses: actions/setup-dotnet@v1.7.2
              with:
                  dotnet-version: 5.0.103

            - name: Check dotnet sdk install
              run: dotnet --info

            - name: Install dependencies
              run: dotnet restore

            - name: Build solution
              run: dotnet build -c Release --no-restore

            - name: Test solution
              run: |
                dotnet tool update --global dotnet-ef
                dotnet ef database update --project src/jmbde
                dotnet test -c Release --no-build --no-restore --verbosity normal

            - name: Package .NET App
              if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') }}
              shell: pwsh
              run: |
                New-Item -ItemType Directory -Path C:\builtfiles -Force > $null
                7z a -mx9 "C:\builtfiles\$env:ProjectName-${{ steps.tag.outputs.tag }}.7z" ".\src\$env:ProjectName\bin\$env:Configuration\$env:NET_TFM\publish"
                7z rn "C:\builtfiles\$env:ProjectName-${{ steps.tag.outputs.tag }}.7z" publish $env:ProjectName
                echo "NET_SHA256=$(.\Build\GetSHA256\GetSHA256.ps1 C:\builtfiles\$env:ProjectName-${{ steps.tag.outputs.tag }}.7z)" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

            - name: Create a new GitHub Release
              uses: softprops/action-gh-release@v1
              if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') }}
              env:
                GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
              with:
                name: v${{ steps.tag.outputs.tag }}
                prerelease: true
                draft: false
                files: |
                    C:\builtfiles\${{ env.ProjectName }}-${{ steps.tag.outputs.tag }}.7z
                # body: |
                  #  [![](https://img.shields.io/badge/Telegram-Channel-blue)]
